NAMES = ["ADrep1","ADrep2","P0rep1","P0rep2","P4rep1","P4rep2","P7rep1","P7rep2"]

rule all:
	input:
		'results/full_data/verse_concat_filtered.csv',
		'results/full_data/id2gene.txt',

rule verse:
	input:
		bam = 'results/full_data/{name}.Aligned.out.bam',
		gtf = 'results/gencode.vM33.primary_assembly.annotation.gtf',
	output:
		verse_exons = 'results/full_data/{name}.exon.txt'
	params:
		prefix = 'results/full_data/{name}'
	shell:
		'verse -S -a {input.gtf} -o {params.prefix} {input.bam}'

rule concat_verse:
	input:
		mats = expand('results/full_data/{name}.exon.txt', name=NAMES)
	output:
		concat = 'results/full_data/verse_concat.csv'
	shell:
		'''
		python concat_df.py -i {input.mats} -o {output.concat}
		'''

rule filter_cts:
	input:
		verse = 'results/full_data/verse_concat.csv'
	output:
		filtered = 'results/full_data/verse_concat_filtered.csv'
	shell:
		'''
		python filter_cts_mat.py -i {input.verse} -o {output.filtered}
		'''

rule txn_mapping:
	input:
		gtf = 'results/gencode.vM33.primary_assembly.annotation.gtf'
	output:
		mapping = 'results/full_data/id2gene.txt'
	shell:
		'''
		python parse_gtf.py -i {input.gtf} -o {output.mapping}
		'''